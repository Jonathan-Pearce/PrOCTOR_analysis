baskets.df <- NULL
baskets.df <- rbind(baskets.df, "1st" = c(7, 4))
#baskets.df <- rbind(baskets.df, “7th” = c(7, 4))
baskets.df
kable(baskets.df)
xtable(baskets.df)
library(knitr)
library(xtable)
options(xtable.floating = FALSE)
options(xtable.timestamp = "")
file1<-"http://www.math.mcgill.ca/yyang/regression/data/TestScores.csv"
data1<-read.csv(file1,header=TRUE)
data1$Faculty<-as.factor(data1$Faculty)
fit1a<-lm(data1$Score~data1$Faculty)
summary(fit1a)
globalF <- anova(fit1a)
globalF
file2<-"http://www.math.mcgill.ca/yyang/regression/data/Filter.csv"
data2<-read.csv(file2,header=TRUE)
mod1<-lm(data2$noise~1);
SS1<-anova(mod1)[1,2]
mod2<-lm(data2$noise~data2$carsize);
SS2<-anova(mod2)[2,2]
mod3<-lm(data2$noise~data2$type);
SS3<-anova(mod3)[2,2]
mod4<-lm(data2$noise~data2$carsize+data2$type);
SS4<-anova(mod4)[3,2]
mod5<-lm(data2$noise~data2$carsize*data2$type);
SS5<-anova(mod5)[4,2]
baskets.df <- NULL
baskets.df <- rbind(baskets.df, "1st" = c(7, 4))
#baskets.df <- rbind(baskets.df, “7th” = c(7, 4))
baskets.df
#kable(baskets.df)
xtable(baskets.df)
library(knitr)
library(xtable)
library(gridExtra)
install.packages("gridExtra")
library(knitr)
library(xtable)
library(gridExtra)
options(xtable.floating = FALSE)
options(xtable.timestamp = "")
file1<-"http://www.math.mcgill.ca/yyang/regression/data/TestScores.csv"
data1<-read.csv(file1,header=TRUE)
data1$Faculty<-as.factor(data1$Faculty)
fit1a<-lm(data1$Score~data1$Faculty)
summary(fit1a)
globalF <- anova(fit1a)
globalF
file2<-"http://www.math.mcgill.ca/yyang/regression/data/Filter.csv"
data2<-read.csv(file2,header=TRUE)
mod1<-lm(data2$noise~1);
SS1<-anova(mod1)[1,2]
mod2<-lm(data2$noise~data2$carsize);
SS2<-anova(mod2)[2,2]
mod3<-lm(data2$noise~data2$type);
SS3<-anova(mod3)[2,2]
mod4<-lm(data2$noise~data2$carsize+data2$type);
SS4<-anova(mod4)[3,2]
mod5<-lm(data2$noise~data2$carsize*data2$type);
SS5<-anova(mod5)[4,2]
baskets.df <- NULL
baskets.df <- rbind(baskets.df, "1st" = c(7, 4))
#baskets.df <- rbind(baskets.df, “7th” = c(7, 4))
baskets.df
#kable(baskets.df)
xtable(baskets.df)
grid.table(baskets.df)
file2<-"http://www.math.mcgill.ca/yyang/regression/data/Filter.csv"
data2<-read.csv(file2,header=TRUE)
mod1<-lm(data2$noise~1);
SS1<-anova(mod1)[1,2]
mod2<-lm(data2$noise~data2$carsize);
SS2<-anova(mod2)[2,2]
mod3<-lm(data2$noise~data2$type);
SS3<-anova(mod3)[2,2]
mod4<-lm(data2$noise~data2$carsize+data2$type);
SS4<-anova(mod4)[3,2]
mod5<-lm(data2$noise~data2$carsize*data2$type);
SS5<-anova(mod5)[4,2]
baskets.df <- NULL
baskets.df <- rbind(baskets.df, "1st" = c(7, 4))
#baskets.df <- rbind(baskets.df, “7th” = c(7, 4))
baskets.df
#kable(baskets.df)
xtable(baskets)
n<-nrow(data2)
fit1<-lm(data2$noise~data2$carsize)
fit2<-lm(data2$noise~data2$carsize*type)
n<-nrow(data2)
fit1<-lm(data2$noise~data2$carsize)
fit2<-lm(data2$noise~data2$carsize*data2$type)
SSRes1<-sum(residuals(fit1)ˆ2)
n<-nrow(data2)
fit1<-lm(data2$noise~data2$carsize)
fit2<-lm(data2$noise~data2$carsize*data2$type)
SSRes1<-sum(residuals(fit1)^2)
p1<-length(coef(fit1))
SSRes2<-sum(residuals(fit2)^2)
p2<-length(coef(fit2))
(fstat<-((SSRes1-SSRes2)/(p2-p1))/(SSRes2/(n-p2)))
file2<-"http://www.math.mcgill.ca/yyang/regression/data/Filter.csv"
data2<-read.csv(file2,header=TRUE)
mod1<-lm(data2$noise~1);
SSRes1<-anova(mod1)[1,2]
mod2<-lm(data2$noise~data2$carsize);
SSRes2<-anova(mod2)[2,2]
mod3<-lm(data2$noise~data2$type);
SSRes3<-anova(mod3)[2,2]
mod4<-lm(data2$noise~data2$carsize+data2$type);
SSRes4<-anova(mod4)[3,2]
mod5<-lm(data2$noise~data2$carsize*data2$type);
SSRes5<-anova(mod5)[4,2]
n<-nrow(data2)
fit1<-lm(data2$noise~data2$carsize)
fit2<-lm(data2$noise~data2$carsize*data2$type)
SSRes1<-sum(residuals(fit1)^2)
SSRes1
p1<-length(coef(fit1))
SSRes2<-sum(residuals(fit2)^2)
p2<-length(coef(fit2))
(fstat<-((SSRes1-SSRes2)/(p2-p1))/(SSRes2/(n-p2)))
n<-nrow(data2)
fit1<-lm(data2$noise~data2$carsize)
fit2<-lm(data2$noise~data2$carsize*data2$type)
fit1
SSRes1<-sum(residuals(fit1)^2)
SSRes1
p1<-length(coef(fit1))
SSRes2<-sum(residuals(fit2)^2)
p2<-length(coef(fit2))
(fstat<-((SSRes1-SSRes2)/(p2-p1))/(SSRes2/(n-p2)))
n<-nrow(data2)
fit1<-lm(data2$noise~data2$carsize)
fit2<-lm(data2$noise~data2$carsize*data2$type)
summary(fit1)
SSRes1<-sum(residuals(fit1)^2)
SSRes1
p1<-length(coef(fit1))
SSRes2<-sum(residuals(fit2)^2)
p2<-length(coef(fit2))
(fstat<-((SSRes1-SSRes2)/(p2-p1))/(SSRes2/(n-p2)))
n<-nrow(data2)
model1<-lm(data2$noise~data2$carsize)
model2<-lm(data2$noise~data2$carsize*data2$type)
SSRes1<-sum(residuals(fit1)^2)
p1<-length(coef(fit1))
SSRes2<-sum(residuals(fit2)^2)
p2<-length(coef(fit2))
(fstat<-((SSRes1-SSRes2)/(p2-p1))/(SSRes2/(n-p2)))
n<-nrow(data2)
model1<-lm(data2$noise~data2$carsize)
model2<-lm(data2$noise~data2$carsize*data2$type)
SSResmodel1<-sum(residuals(model1)^2)
pmodel1<-length(coef(model1))
SSResmodel2<-sum(residuals(model2)^2)
pmodel2<-length(coef(model2))
(F<-((SSResmodel1-SSResmodel2)/(pmodel2-pmodel1))/(SSResmodel2/(n-pmodel2)))
pvalue<- 1-pf(F,df1,df2)
n<-nrow(data2)
model1<-lm(data2$noise~data2$carsize)
model2<-lm(data2$noise~data2$carsize*data2$type)
SSResmodel1<-sum(residuals(model1)^2)
pmodel1<-length(coef(model1))
SSResmodel2<-sum(residuals(model2)^2)
pmodel2<-length(coef(model2))
(F<-((SSResmodel1-SSResmodel2)/(pmodel2-pmodel1))/(SSResmodel2/(n-pmodel2)))
pvalue<- 1-pf(F,pmodel2-pmodel1,n-pmodel2)
n<-nrow(data2)
model1<-lm(data2$noise~data2$carsize)
model2<-lm(data2$noise~data2$carsize*data2$type)
SSResmodel1<-sum(residuals(model1)^2)
pmodel1<-length(coef(model1))
SSResmodel2<-sum(residuals(model2)^2)
pmodel2<-length(coef(model2))
F<-((SSResmodel1-SSResmodel2)/(pmodel2-pmodel1))/(SSResmodel2/(n-pmodel2))
F
pvalue<- 1-pf(F,pmodel2-pmodel1,n-pmodel2)
pvalue
install.packages("stargazer")
file2<-"http://www.math.mcgill.ca/yyang/regression/data/Filter.csv"
data2<-read.csv(file2,header=TRUE)
mod1<-lm(data2$noise~1);
SSRes1<-anova(mod1)[1,2]
mod2<-lm(data2$noise~data2$carsize);
SSRes2<-anova(mod2)[2,2]
mod3<-lm(data2$noise~data2$type);
SSRes3<-anova(mod3)[2,2]
mod4<-lm(data2$noise~data2$carsize+data2$type);
SSRes4<-anova(mod4)[3,2]
mod5<-lm(data2$noise~data2$carsize*data2$type);
SSRes5<-anova(mod5)[4,2]
table.df <- NULL
table.df <- rbind(table.df,c('intercept',SSRes1,1))
print table.df
file2<-"http://www.math.mcgill.ca/yyang/regression/data/Filter.csv"
data2<-read.csv(file2,header=TRUE)
mod1<-lm(data2$noise~1);
SSRes1<-anova(mod1)[1,2]
mod2<-lm(data2$noise~data2$carsize);
SSRes2<-anova(mod2)[2,2]
mod3<-lm(data2$noise~data2$type);
SSRes3<-anova(mod3)[2,2]
mod4<-lm(data2$noise~data2$carsize+data2$type);
SSRes4<-anova(mod4)[3,2]
mod5<-lm(data2$noise~data2$carsize*data2$type);
SSRes5<-anova(mod5)[4,2]
table.df <- NULL
table.df <- rbind(table.df,c('intercept',SSRes1,1))
table.df
file2<-"http://www.math.mcgill.ca/yyang/regression/data/Filter.csv"
data2<-read.csv(file2,header=TRUE)
mod1<-lm(data2$noise~1);
SSRes1<-anova(mod1)[1,2]
mod2<-lm(data2$noise~data2$carsize);
SSRes2<-anova(mod2)[2,2]
mod3<-lm(data2$noise~data2$type);
SSRes3<-anova(mod3)[2,2]
mod4<-lm(data2$noise~data2$carsize+data2$type);
SSRes4<-anova(mod4)[3,2]
mod5<-lm(data2$noise~data2$carsize*data2$type);
SSRes5<-anova(mod5)[4,2]
table.df <- NULL
table.df <- rbind(table.df,c('intercept',SSRes1,1))
table.df
stargazer(table.df)
library(knitr)
library(xtable)
library(stargazer)
library(gridExtra)
options(xtable.floating = FALSE)
options(xtable.timestamp = "")
file1<-"http://www.math.mcgill.ca/yyang/regression/data/TestScores.csv"
data1<-read.csv(file1,header=TRUE)
data1$Faculty<-as.factor(data1$Faculty)
fit1a<-lm(data1$Score~data1$Faculty)
summary(fit1a)
globalF <- anova(fit1a)
globalF
file2<-"http://www.math.mcgill.ca/yyang/regression/data/Filter.csv"
data2<-read.csv(file2,header=TRUE)
mod1<-lm(data2$noise~1);
SSRes1<-anova(mod1)[1,2]
mod2<-lm(data2$noise~data2$carsize);
SSRes2<-anova(mod2)[2,2]
mod3<-lm(data2$noise~data2$type);
SSRes3<-anova(mod3)[2,2]
mod4<-lm(data2$noise~data2$carsize+data2$type);
SSRes4<-anova(mod4)[3,2]
mod5<-lm(data2$noise~data2$carsize*data2$type);
SSRes5<-anova(mod5)[4,2]
table.df <- NULL
table.df <- rbind(table.df,c('intercept',SSRes1,1))
table.df
stargazer(table.df)
knitr::opts_chunk$set(echo = TRUE)
fit0<-lm(Satisfaction~Surgery,data=data3)
knitr::opts_chunk$set(echo = TRUE)
options(xtable.floating = FALSE)
options(xtable.timestamp = "")
file1<-"http://www.math.mcgill.ca/yyang/regression/data/TestScores.csv"
data1<-read.csv(file1,header=TRUE)
data1$Faculty<-as.factor(data1$Faculty)
fit1a<-lm(data1$Score~data1$Faculty)
summary(fit1a)
globalF <- anova(fit1a)
globalF
fit1b<-lm(data1$Score~-1+data1$Faculty)
sum1b<-summary(fit1b)
sum1b
sum1b <- sum1b$coef[,1:2]
file2<-"http://www.math.mcgill.ca/yyang/regression/data/Filter.csv"
data2<-read.csv(file2,header=TRUE)
model1<-lm(data2$noise~1);
SSRes1<-anova(model1)[1,2]
model2<-lm(data2$noise~data2$carsize);
SSRes2<-anova(model2)[2,2]
model3<-lm(data2$noise~data2$type);
SSRes3<-anova(model3)[2,2]
model4<-lm(data2$noise~data2$carsize+data2$type);
SSRes4<-anova(model4)[3,2]
model5<-lm(data2$noise~data2$carsize*data2$type);
SSRes5<-anova(model5)[4,2]
SSRes <- c(SSRes1,SSRes2,SSRes3,SSRes4,SSRes5)
p <- c(1,3,2,4,6)
Model <- c('1', '1 + X_1','1 + X_2','1 + X_1 + X_2','1 + X_1 + X_2 + X_1.X_2')
table <- cbind(Model,SSRes,p)
table2 = as.table(table)
table2
n<-nrow(data2)
model1<-lm(data2$noise~data2$carsize)
model2<-lm(data2$noise~data2$carsize*data2$type)
SSResmodel1<-sum(residuals(model1)^2)
pmodel1<-length(coef(model1))
SSResmodel2<-sum(residuals(model2)^2)
pmodel2<-length(coef(model2))
F<-((SSResmodel1-SSResmodel2)/(pmodel2-pmodel1))/(SSResmodel2/(n-pmodel2))
pvalue<- 1-pf(F,pmodel2-pmodel1,n-pmodel2)
pvalue
file3<-"http://www.math.mcgill.ca/yyang/regression/data/PatSat.csv"
data3<-read.csv(file3,header=TRUE)
fit0<-lm(Satisfaction~Surgery,data=data3)
summary(fit0)
model1<-lm(Satisfaction~Surgery,data=data3)
sum1 <- summary(model1)
sum1
sum1[1,5]
model1<-lm(Satisfaction~Surgery,data=data3)
sum1 <- summary(model1)
sum1
sum1[1,4]
model1<-lm(Satisfaction~Surgery,data=data3)
sum1 <- summary(model1)
sum1
sum1$coefficients[1,4]
model1<-lm(Satisfaction~Surgery,data=data3)
sum1 <- summary(model1)
sum1
sum1$coefficients[2,4]
summary(lm1 <- lm(Satisfaction ~ ., data = data3))
slm1 <- step(lm1)
summary(slm1)
slm1$anova
AIC(slm1)
lm1 <- lm(Satisfaction ~ ., data = data3)
slm1 <- step(lm1)
summary(slm1)
slm1$anova
AIC(slm1)
lm1 <- lm(Satisfaction ~ ., data = data3)
slm1 <- step(lm1)
summary(slm1)
#slm1$anova
AIC(slm1)
lm1 <- lm(Satisfaction ~ ., data = data3)
slm1 <- step(lm1)
summary(slm1)
optimalModel <- lm(Satisfaction~Age + Severity,data=data3)
comparisonModel <- lm(Satisfaction~Age + Severity + Surgery,data=data3)
AIC(optimalModel)
AIC(comparisonModel)
BIC(optimalModel)
BIC(comparisonModel)
n<-nrow(data2)
model1<-lm(data2$noise~data2$carsize)
model2<-lm(data2$noise~data2$carsize*data2$type)
SSResmodel1<-sum(residuals(model1)^2)
pmodel1<-length(coef(model1))
SSResmodel2<-sum(residuals(model2)^2)
pmodel2<-length(coef(model2))
F<-((SSResmodel1-SSResmodel2)/(pmodel2-pmodel1))/(SSResmodel2/(n-pmodel2))
pvalue<- 1-pf(F,pmodel2-pmodel1,n-pmodel2)
pvalue
AIC(model1)
AIC(model2)
file2<-"http://www.math.mcgill.ca/yyang/regression/data/Filter.csv"
data2<-read.csv(file2,header=TRUE)
model1<-lm(data2$noise~1);
SSRes1<-anova(model1)[1,2]
model2<-lm(data2$noise~data2$carsize);
SSRes2<-anova(model2)[2,2]
model3<-lm(data2$noise~data2$type);
SSRes3<-anova(model3)[2,2]
model4<-lm(data2$noise~data2$carsize+data2$type);
SSRes4<-anova(model4)[3,2]
model5<-lm(data2$noise~data2$carsize*data2$type);
SSRes5<-anova(model5)[4,2]
SSRes <- c(SSRes1,SSRes2,SSRes3,SSRes4,SSRes5)
SSRes <- round(SSRes, digits = 1)
p <- c(1,3,2,4,6)
Model <- c('1', '1 + X_1','1 + X_2','1 + X_1 + X_2','1 + X_1 + X_2 + X_1.X_2')
table <- cbind(Model,SSRes,p)
table2 = as.table(table)
table2
knitr::opts_chunk$set(echo = TRUE)
file1<-"http://www.math.mcgill.ca/yyang/regression/data/TestScores.csv"
data1<-read.csv(file1,header=TRUE)
data1$Faculty<-as.factor(data1$Faculty)
fit1a<-lm(data1$Score~data1$Faculty)
summary(fit1a)
globalF <- anova(fit1a)
globalF
fit1b<-lm(data1$Score~-1+data1$Faculty)
sum1b<-summary(fit1b)
sum1b
sum1b <- sum1b$coef[,1:2]
file2<-"http://www.math.mcgill.ca/yyang/regression/data/Filter.csv"
data2<-read.csv(file2,header=TRUE)
model1<-lm(data2$noise~1);
SSRes1<-anova(model1)[1,2]
model2<-lm(data2$noise~data2$carsize);
SSRes2<-anova(model2)[2,2]
model3<-lm(data2$noise~data2$type);
SSRes3<-anova(model3)[2,2]
model4<-lm(data2$noise~data2$carsize+data2$type);
SSRes4<-anova(model4)[3,2]
model5<-lm(data2$noise~data2$carsize*data2$type);
SSRes5<-anova(model5)[4,2]
SSRes <- c(SSRes1,SSRes2,SSRes3,SSRes4,SSRes5)
SSRes <- round(SSRes, digits = 1)
p <- c(1,3,2,4,6)
Model <- c('1', '1 + X_1','1 + X_2','1 + X_1 + X_2','1 + X_1 + X_2 + X_1.X_2')
table <- cbind(Model,SSRes,p)
table2 = as.table(table)
table2
n<-nrow(data2)
model1<-lm(data2$noise~data2$carsize)
model2<-lm(data2$noise~data2$carsize*data2$type)
SSResmodel1<-sum(residuals(model1)^2)
pmodel1<-length(coef(model1))
SSResmodel2<-sum(residuals(model2)^2)
pmodel2<-length(coef(model2))
F<-((SSResmodel1-SSResmodel2)/(pmodel2-pmodel1))/(SSResmodel2/(n-pmodel2))
pvalue<- 1-pf(F,pmodel2-pmodel1,n-pmodel2)
pvalue
file3<-"http://www.math.mcgill.ca/yyang/regression/data/PatSat.csv"
data3<-read.csv(file3,header=TRUE)
model1<-lm(Satisfaction~Surgery,data=data3)
sum1 <- summary(model1)
sum1
lm1 <- lm(Satisfaction ~ ., data = data3)
slm1 <- step(lm1)
summary(slm1)
optimalModel <- lm(Satisfaction~Age + Severity,data=data3)
comparisonModel <- lm(Satisfaction~Age + Severity + Surgery,data=data3)
AIC(optimalModel)
AIC(comparisonModel)
BIC(optimalModel)
BIC(comparisonModel)
n<-nrow(data2)
model1<-lm(data2$noise~data2$carsize)
model2<-lm(data2$noise~data2$carsize*data2$type)
SSResmodel1<-sum(residuals(model1)^2)
pmodel1<-3
SSResmodel2<-sum(residuals(model2)^2)
pmodel2<-6
F<-((SSResmodel1-SSResmodel2)/(pmodel2-pmodel1))/(SSResmodel2/(n-pmodel2))
pvalue<- 1-pf(F,pmodel2-pmodel1,n-pmodel2)
pvalue
n<-nrow(data2)
model1<-lm(data2$noise~data2$carsize)
model2<-lm(data2$noise~data2$carsize*data2$type)
SSResmodel1<-sum(residuals(model1)^2)
pmodel1<-3
SSResmodel2<-sum(residuals(model2)^2)
pmodel2<-6
F<-((SSResmodel1-SSResmodel2)/(pmodel2-pmodel1))/(SSResmodel2/(n-pmodel2))
pvalue<- 1-pf(F,pmodel2-pmodel1,n-pmodel2)
pvalue
n<-nrow(data2)
model1<-lm(data2$noise~data2$carsize)
model2<-lm(data2$noise~data2$carsize*data2$type)
SSResmodel1<-sum(residuals(model1)*residuals(model1))
pmodel1<-3
SSResmodel2<-sum(residuals(model2)^2)
pmodel2<-6
F<-((SSResmodel1-SSResmodel2)/(pmodel2-pmodel1))/(SSResmodel2/(n-pmodel2))
pvalue<- 1-pf(F,pmodel2-pmodel1,n-pmodel2)
pvalue
n<-nrow(data2)
model1<-lm(data2$noise~data2$carsize)
model2<-lm(data2$noise~data2$carsize*data2$type)
SSResmodel1<-sum(residuals(model1)*residuals(model1))
pmodel1<-3
SSResmodel2<-sum(residuals(model2)^2)
pmodel2<-6
F<-((SSResmodel1-SSResmodel2)/(pmodel2-pmodel1))/(SSResmodel2/(n-pmodel2))
pvalue<- 1-pf(F,pmodel2-pmodel1,n-pmodel2)
pvalue
n<-nrow(data2)
pmodel1<-3
pmodel1<-6
model1<-lm(data2$noise~data2$carsize)
model2<-lm(data2$noise~data2$carsize*data2$type)
SSResmodel1<-sum(residuals(model1)*residuals(model1))
SSResmodel2<-sum(residuals(model2)*residuals(model2))
F<-((SSResmodel1-SSResmodel2)/(pmodel2-pmodel1))/(SSResmodel2/(n-pmodel2))
pvalue<- 1-pf(F,pmodel2-pmodel1,n-pmodel2)
pvalue
n<-nrow(data2)
pmodel1<-3
pmodel2<-6
model1<-lm(data2$noise~data2$carsize)
model2<-lm(data2$noise~data2$carsize*data2$type)
SSResmodel1<-sum(residuals(model1)*residuals(model1))
SSResmodel2<-sum(residuals(model2)*residuals(model2))
F<-((SSResmodel1-SSResmodel2)/(pmodel2-pmodel1))/(SSResmodel2/(n-pmodel2))
pvalue<- 1-pf(F,pmodel2-pmodel1,n-pmodel2)
pvalue
install.packages(c("shiny", "shinyjs", "data.table", "plyr", "htmlwidgets", "ggplot2", "randomForest", "grid", "gridExtra", "Cairo","rcdk"))
biocLite("Rcpi")
biocLite("ChemmineR")
biocLite("ChemmineOB")
source("https://bioconductor.org/biocLite.R")
biocLite("Rcpi")
library(shiny)
load("/path/to/PrOCTOR/shiny/PrOCTOR_interpretation/initial_values.RData")
library(shiny)
install.packages(c("shiny", "shinyjs", "data.table", "plyr", "htmlwidgets", "ggplot2", "randomForest", "grid", "gridExtra", "Cairo","rcdk"))
source("https://bioconductor.org/biocLite.R")
biocLite("Rcpi")
biocLite("ChemmineR")
biocLite("ChemmineOB")
library(shiny)
load("/Users/jaypearce9/Desktop/PrOCTOR-master/shiny/PrOCTOR_predictions/initial_values.RData")
runApp("/Users/jaypearce9/Desktop/PrOCTOR-master/shiny/PrOCTOR_predictions")
source('Desktop/PrOCTOR-master/Code.R')
source('Desktop/PrOCTOR-master/Code.R')
install.packages("Cairo")
source('Desktop/PrOCTOR-master/Code.R')
